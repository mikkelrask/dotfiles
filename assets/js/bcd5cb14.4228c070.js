"use strict";(self.webpackChunkdotfile_docs=self.webpackChunkdotfile_docs||[]).push([[159],{4682:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var i=n(4848),s=n(8453);const a={title:"Before installing",date:new Date("2024-02-29T00:00:00.000Z"),author:[{name:"mr@github",title:"Tinkerer and hobby futurist",url:"https://github.com/mikkelrask",image_url:"https://github.com/mikkelrask.png"}],tags:["Install","Dependencies","Requirements"]},o="Main packages",r={id:"getting-started/download-repo",title:"Before installing",description:"Besides the main apps, I use different utils and quality of life improvements to make it all work - most of the requirements are strictly for neovim, and specifically if you use it to write a given language. I.e you don't have to install go, if you never plan on writing anything golang. (in neovim run :checkhealth to verify the languages you need, is present)",source:"@site/docs/getting-started/download-repo.md",sourceDirName:"getting-started",slug:"/getting-started/download-repo",permalink:"/docs/getting-started/download-repo",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/getting-started/download-repo.md",tags:[{label:"Install",permalink:"/docs/tags/install"},{label:"Dependencies",permalink:"/docs/tags/dependencies"},{label:"Requirements",permalink:"/docs/tags/requirements"}],version:"current",frontMatter:{title:"Before installing",date:"2024-02-29T00:00:00.000Z",author:[{name:"mr@github",title:"Tinkerer and hobby futurist",url:"https://github.com/mikkelrask",image_url:"https://github.com/mikkelrask.png"}],tags:["Install","Dependencies","Requirements"]},sidebar:"tutorialSidebar",previous:{title:"Getting started",permalink:"/docs/category/getting-started"},next:{title:"Included themes",permalink:"/docs/category/included-themes"}},l={},d=[{value:"Packages",id:"packages",level:2},{value:"Dependencies",id:"dependencies",level:2}];function c(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"main-packages",children:"Main packages"}),"\n",(0,i.jsxs)(t.p,{children:["Besides the main apps, I use different utils and quality of life improvements to make it all work - most of the requirements are strictly for neovim, and specifically if you use it to write a given language. I.e you don't have to install ",(0,i.jsx)(t.code,{children:"go"}),", if you never plan on writing anything golang. ",(0,i.jsxs)(t.em,{children:["(in neovim run ",(0,i.jsx)(t.code,{children:":checkhealth"})," to verify the languages you need, is present)"]}),"\nAll documentation and code examples are using ",(0,i.jsx)(t.code,{children:"doas"})," rather than ",(0,i.jsx)(t.code,{children:"sudo"})," when needing elevated rights, but if you don't use ",(0,i.jsx)(t.code,{children:"doas"})," simply change it accordingly."]}),"\n",(0,i.jsx)(t.h2,{id:"packages",children:"Packages"}),"\n",(0,i.jsxs)(t.p,{children:["Heres an unexhausted list of the packages I use, that are also included in my ",(0,i.jsx)(t.a,{href:"https://github.com/mikkelrask/dotfiles",children:"dotfiles repository"}),'. More optional recommendations are listed below. Seeing that besides my configurations, this repo is made to also deploy them on a new machine, the install script will install the following, along with the nessecary dependencies. For the same reason, i\'ve made the installer "os-agnostic", meaning it will detect if you are on arch, fedora or ubuntu, and act accordingly.']}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsxs)(t.strong,{children:["Tmux, i3wm, Hyprland, kitty, dmenu, obsidian, zsh, mpv, newsboat - ",(0,i.jsx)(t.a,{href:"/docs/packages/all-packages",children:"see more"})]})}),"\n",(0,i.jsx)(t.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,i.jsxs)(t.p,{children:['And for all of the configs to work there are some additional packages, that are needed for the custom utilities to work. These "dev deps", if you\'d like, ',(0,i.jsx)(t.em,{children:"can"})," be omitted, however all of the documentation is made with those in mind, as well as shorthand/aliases, set in our zshrc-config."]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var i=n(6540);const s={},a=i.createContext(s);function o(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);