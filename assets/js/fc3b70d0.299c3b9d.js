"use strict";(self.webpackChunkdotfile_docs=self.webpackChunkdotfile_docs||[]).push([[6932],{6892:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>o});var a=s(4848),t=s(8453);const i={title:"bun"},r="bun.sh",c={id:"packages/bun/index",title:"bun",description:"I'm not sure bun needs any further introduction here? How 'bout a meme?",source:"@site/docs/packages/bun/index.md",sourceDirName:"packages/bun",slug:"/packages/bun/",permalink:"/docs/packages/bun/",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/packages/bun/index.md",tags:[],version:"current",frontMatter:{title:"bun"},sidebar:"tutorialSidebar",previous:{title:"bat",permalink:"/docs/packages/bat/"},next:{title:"confirm",permalink:"/docs/packages/confirm/"}},l={},o=[{value:"Install bun",id:"install-bun",level:2},{value:"Usage",id:"usage",level:2},{value:"Run js-files",id:"run-js-files",level:3},{value:"Install packages",id:"install-packages",level:3},{value:"Update",id:"update",level:3}];function d(e){const n={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"bunsh",children:"bun.sh"}),"\n",(0,a.jsxs)(n.p,{children:["I'm not sure bun needs any further introduction here? How 'bout a meme?\n",(0,a.jsx)(n.img,{alt:"Bun description",src:s(2333).A+"",width:"509",height:"500"})]}),"\n",(0,a.jsx)(n.h2,{id:"install-bun",children:"Install bun"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.a,{href:"https://bun.sh",children:"bun"}),"-team has made the super easy short command available for us, to without any mental overhead be able to install their package."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -fsSL https://bun.sh/install | bash\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.em,{children:["if you don't like to pipe directly into bash, you can see what your executing by first piping it to i.e ",(0,a.jsx)(n.code,{children:"cat"})," or ",(0,a.jsx)(n.a,{href:"/docs/packages/bat/",children:"bat"})," - the ",(0,a.jsx)(n.code,{children:"cat"}),"-alternative I prefer: ",(0,a.jsx)(n.code,{children:"curl -fsSL https://bun.sh/install | bat"})]})}),"\n",(0,a.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsxs)(n.p,{children:["While it is a replacement for nodejs, it's not exactly just setting up an alias, or something - there are differences in how they work, even though close.",(0,a.jsx)(n.br,{}),"\n","I personally miss ",(0,a.jsx)(n.code,{children:"yarn"}),"'s short syntax for adding/installing packages, but thats about it, and since yarn is ",(0,a.jsx)(n.em,{children:"only"})," a package manager, and bun tries to (well ",(0,a.jsx)(n.em,{children:"is"}),") both a runtime and a package manager, the syntax obviously can't be the exact same."]}),"\n",(0,a.jsx)(n.h3,{id:"run-js-files",children:"Run js-files"}),"\n",(0,a.jsxs)(n.p,{children:["Instead of ",(0,a.jsx)(n.code,{children:"node App.js"})," we can invoke ",(0,a.jsx)(n.code,{children:"bun App.js"})," instead, for a faster, but otherwise same result.  People have been questioning buns speed claims in their benchmarks, but the way I see it - if it's faster it's a win, then it doesn't matter ",(0,a.jsx)(n.em,{children:"for me"}),", if it's 2-3 or 4 times faster."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"bun <app-name>.js\n"})}),"\n",(0,a.jsx)(n.h3,{id:"install-packages",children:"Install packages"}),"\n",(0,a.jsxs)(n.p,{children:["And just like we can switch out ",(0,a.jsx)(n.code,{children:"nodejs"})," for bun, we can also switch out ",(0,a.jsx)(n.code,{children:"npm"}),", ",(0,a.jsx)(n.code,{children:"yarn"})," or whatever we typically use, with bun."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"bun install <package-name>@<version>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"update",children:"Update"}),"\n",(0,a.jsxs)(n.p,{children:["Since we're not utilizing any of our typical linux package managers, a ",(0,a.jsx)(n.code,{children:"sudo apt update"})," or ",(0,a.jsx)(n.code,{children:"sudo yum update bun"})," won't get us anywhere in terms of updating bun. The team has instead baked the update function right in to their bun, and updating is therefor as simple as"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"bun update\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},2333:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/denobunpm-43008083d1f6319892227d1a025cf18d.jpg"},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var a=s(6540);const t={},i=a.createContext(t);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);