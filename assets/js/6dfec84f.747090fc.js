"use strict";(self.webpackChunkdotfile_docs=self.webpackChunkdotfile_docs||[]).push([[2561],{6987:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var n=s(4848),i=s(8453);const a={title:"The BLAZINGLY FAST Quick start \u26a1",sidebar_position:2},o=void 0,r={id:"getting-started/intro",title:"The BLAZINGLY FAST Quick start \u26a1",description:"Lean back and let this simple command do the job for you:",source:"@site/docs/getting-started/intro.md",sourceDirName:"getting-started",slug:"/getting-started/intro",permalink:"/dotfiles/docs/getting-started/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/getting-started/intro.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"The BLAZINGLY FAST Quick start \u26a1",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Before installing",permalink:"/dotfiles/docs/getting-started/download-repo"},next:{title:"Included themes",permalink:"/dotfiles/docs/category/included-themes"}},l={},d=[{value:"For a little more control",id:"for-a-little-more-control",level:2},{value:"Packages",id:"packages",level:2},{value:"Dependencies",id:"dependencies",level:2}];function c(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Lean back and let this simple command do the job for you:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"curl -fsSL https://raw.githubusercontent.com/mikkelrask/dotfiles/master/installer.sh | bash\n"})}),"\n",(0,n.jsxs)(t.p,{children:["This will automatically download the complete repo, change directory into it, and run the ",(0,n.jsx)(t.a,{href:"/dotfiles/docs/packages/install.sh/",children:"second-stage installer"}),", that installs both the needed packages as well as their dotfiles beforefinally clean up after itself. Works for arch-based, ubuntu-based and fedora-like systems."]}),"\n",(0,n.jsx)(t.h2,{id:"for-a-little-more-control",children:"For a little more control"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"mkdir -p $HOME/.tmp/dotties\ngit clone git@github.com:mikkelrask/dotfiles.git $HOME/.tmp/dotties\ncd .tmp/dotties\nchmod +x install*\n"})}),"\n",(0,n.jsxs)(t.p,{children:["and from there you can just decide what to run ",(0,n.jsx)(t.a,{href:"/dotfiles/docs/packages/install.sh/",children:"install.sh"}),' (The "autopilot"), ',(0,n.jsx)(t.a,{href:"/dotfiles/docs/packages/install_packages.sh/",children:"intall_packages.sh"}),' (install only the "dotfiles-packages"), or an individual package.']}),"\n",(0,n.jsx)(t.h1,{id:"main-packages",children:"Main packages"}),"\n",(0,n.jsxs)(t.p,{children:['Besides the "main apps", I use different utils and ',(0,n.jsx)(t.em,{children:"quality-of-life-improvements"})," to make it all work - most of the requirements are strictly for neovim, and specifically if you use it to write a given language. I.e you don't have to install ",(0,n.jsx)(t.code,{children:"go"}),", if you never plan on writing anything golang. ",(0,n.jsxs)(t.em,{children:["(in neovim run ",(0,n.jsx)(t.code,{children:":checkhealth"})," to verify the languages you need, is present)"]}),"\nAll documentation and code examples are using ",(0,n.jsx)(t.code,{children:"doas"})," rather than ",(0,n.jsx)(t.code,{children:"sudo"})," when needing elevated rights, but if you don't use ",(0,n.jsx)(t.code,{children:"doas"})," simply change it accordingly."]}),"\n",(0,n.jsx)(t.h2,{id:"packages",children:"Packages"}),"\n",(0,n.jsxs)(t.p,{children:["Heres an unexhausted list of the packages I use, that are also included in my ",(0,n.jsx)(t.a,{href:"https://github.com/mikkelrask/dotfiles",children:"dotfiles repository"}),'. More optional recommendations are listed below. Seeing that besides my configurations, this repo is made to also deploy them on a new machine, the install script will install the following, along with the nessecary dependencies. For the same reason, i\'ve made the installer "os-agnostic", meaning it will detect if you are on arch, fedora or ubuntu, and act accordingly.']}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsxs)(t.strong,{children:["Tmux, i3wm, Hyprland, kitty, dmenu, obsidian, zsh, mpv, newsboat - ",(0,n.jsx)(t.a,{href:"/dotfiles/docs/packages/all-packages",children:"see more"})]})}),"\n",(0,n.jsx)(t.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,n.jsxs)(t.p,{children:['And for all of the configs to work there are some additional packages, that are needed for the custom utilities to work. These "dev deps", if you\'d like, ',(0,n.jsx)(t.em,{children:"can"})," be omitted, however all of the documentation is made with those in mind, as well as shorthand/aliases, set in our zshrc-config."]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>r});var n=s(6540);const i={},a=n.createContext(i);function o(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);